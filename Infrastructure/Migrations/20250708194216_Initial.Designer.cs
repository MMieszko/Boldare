// <auto-generated />
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(BreweryContext))]
    [Migration("20250708194216_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("Application.Models.Brewery", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Breweries", (string)null);
                });

            modelBuilder.Entity("Application.Models.Brewery", b =>
                {
                    b.OwnsOne("Application.Models.GeoLocation", "GeoLocation", b1 =>
                        {
                            b1.Property<string>("BreweryId")
                                .HasColumnType("TEXT");

                            b1.Property<double>("Latitude")
                                .HasColumnType("REAL")
                                .HasColumnName("Latitude");

                            b1.Property<double>("Longitude")
                                .HasColumnType("REAL")
                                .HasColumnName("Longitude");

                            b1.HasKey("BreweryId");

                            b1.ToTable("Breweries");

                            b1.WithOwner()
                                .HasForeignKey("BreweryId");
                        });

                    b.Navigation("GeoLocation");
                });
#pragma warning restore 612, 618
        }
    }
}
